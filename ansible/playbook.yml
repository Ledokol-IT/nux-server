- name: Gathering facts
  hosts: all
  gather_facts: true

- hosts: api
  tasks:
    # - name: Login to Docker Hub
    #   community.docker.docker_login:
    #     username: "{{DOCKERHUB_USERNAME}}"
    #     password: "{{DOCKERHUB_TOKEN}}"
    - name: Run server
      community.docker.docker_compose:
        project_name: nux server api
        definition:
          services:
            postgres:
              image: postgres
              volumes:
                - /nux_postgresql_data:/var/lib/postgresql/data
              environment:
                POSTGRES_USER: "{{POSTGRES_USER}}"
                POSTGRES_PASSWORD: "{{POSTGRES_PASSWORD}}"
                POSTGRES_DB: "{{POSTGRES_DB}}"
              ports:
                - "5432:5432"
              healthcheck:
                test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
                interval: 10s
                timeout: 5s
                retries: 5
            app:
              logging:
                options:
                  max-size: "10m"
                  max-file: "3"
              image: "i3cheese/nux:latest"
              restart: always
              ports:
                - "80:8080"
              environment:
                NUX_PORT: "8080"
                POSTGRES_HOST: localhost
                POSTGRES_USER: "{{POSTGRES_USER}}"
                POSTGRES_PASSWORD: "{{POSTGRES_PASSWORD}}"
                POSTGRES_DB: "{{POSTGRES_DB}}"
                AWS_SECRET_ACCESS_KEY: "{{AWS_SECRET_ACCESS_KEY}}"
                AWS_ACCESS_KEY_ID: "{{AWS_ACCESS_KEY_ID}}"
                NUX_SECRET_KEY: "{{NUX_SECRET_KEY}}"
                GOOGLE_CREDS: "{{GOOGLE_CREDS}}"
                SMSAERO_EMAIL: "{{SMSAERO_EMAIL}}"
                SMSAERO_APIKEY: "{{SMSAERO_APIKEY}}"
            db_tasks:
              image: "i3cheese/nux:latest"
              entrypoint: "/code/scripts/run_db_tasks.sh"
              restart: always
              environment:
                POSTGRES_HOST: localhost
                POSTGRES_USER: "{{POSTGRES_USER}}"
                POSTGRES_PASSWORD: "{{POSTGRES_PASSWORD}}"
                POSTGRES_DB: "{{POSTGRES_DB}}"
                GOOGLE_CREDS: "{{GOOGLE_CREDS}}"
              logging:
                options:
                  max-size: "1m"
                  max-file: "3"
            icons_updater:
              image: "i3cheese/nux:latest"
              entrypoint: "/code/scripts/run_icons_updater.sh"
              restart: always
              environment:
                POSTGRES_HOST: "{{POSTGRES_HOST}}"
                POSTGRES_USER: "{{POSTGRES_USER}}"
                POSTGRES_PASSWORD: "{{POSTGRES_PASSWORD}}"
                POSTGRES_DB: "{{POSTGRES_DB}}"
              logging:
                options:
                  max-size: "1m"
                  max-file: "3"
        pull: yes
      register: output
