name: Lint the code, run tests

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  release:
    types: [published, edited]

jobs:
  # Run code tests before building the image, to ensure it is good to go
  lint_and_test:
    name: Run code tests
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: web
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    - name: Setting up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Add secrets to file
      run: |
        echo '${{ secrets.GOOGLE_CREDS }}' >> google_creds.json
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        curl -sSL 'https://install.python-poetry.org' | python
        poetry install
    - name: Lint the code with pycodestyle
      run: |
        poetry run flake8 nux --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run pycodestyle nux
    - name: Run pytest
      run: |
        poetry run pytest
      env:
        # dont actualy used
        POSTGRES_PASSWORD: pass
        POSTGRES_USER: web
        POSTGRES_HOST: "localhost:5432"
  docker:
    name: Build and push Docker image to Docker Hub
    if: github.event_name == 'release' # && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tag_with_ref: true # Info: https://github.com/docker/build-push-action/tree/releases/v1#tag_with_ref
          tag_with_sha: true # Info: https://github.com/docker/build-push-action/tree/releases/v1#tag_with_sha
          tags: i3cheese/nux:latest

